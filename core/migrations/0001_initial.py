# Generated by Django 5.2.1 on 2025-05-29 04:31

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('id_archivo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_archivo', models.CharField(max_length=255)),
                ('nombre_temporal', models.CharField(max_length=255, null=True)),
                ('ruta_archivo', models.CharField(max_length=255)),
                ('tipo_archivo', models.CharField(max_length=100)),
                ('tamano', models.IntegerField(null=True)),
                ('descripcion_corta', models.CharField(max_length=150, null=True)),
                ('descripcion_largar', models.TextField(null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'archivo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'categoria',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id_comentario', models.AutoField(primary_key=True, serialize=False)),
                ('contenido', models.TextField()),
                ('fecha_creacion', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField()),
            ],
            options={
                'db_table': 'comentario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Estatus',
            fields=[
                ('id_estatus', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('fecha_creacion', models.DateTimeField(null=True)),
                ('fecha_actualizacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'estatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('id_publicacion', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=255)),
                ('foto_portada', models.ImageField(blank=True, db_column='foto_portada', null=True, upload_to='portadas/')),
                ('vistas', models.PositiveIntegerField(db_column='vistas', default=0)),
                ('resumen', models.TextField(null=True)),
                ('contenido', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'publicacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublicacionArchivo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'publicacion_archivo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id_rol', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(null=True)),
                ('fecha_actualizacion', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'rol',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(db_column='id_usuario', primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(db_column='correo', max_length=254, unique=True)),
                ('password', models.CharField(db_column='contrasena', max_length=255)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/')),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('imagen_fondo', models.ImageField(blank=True, null=True, upload_to='fondos_perfil/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('fk_rol', models.ForeignKey(db_column='fk_rol', null=True, on_delete=django.db.models.deletion.RESTRICT, to='core.rol')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuario',
                'managed': True,
            },
        ),
    ]
